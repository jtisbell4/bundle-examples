name: "Draft new hotfix"

on:
  workflow_dispatch:
    inputs:
      pr_number:
          description: 'The PR number to base this hotfix on'
          required: true
permissions:
      issues: write
      contents: write
      pull-requests: write
jobs:
  draft-new-hotfix:
    name: "Draft a new hotfix"
    runs-on: ubuntu-latest
    steps:
      - name: Get PR data
        id: pr_data
        run: |
          PR_DATA=$(curl \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.inputs.pr_number }}")
          BRANCH=$(echo "$PR_DATA" | jq -r .head.ref)
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
        shell: bash
      
      
      
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr_data.outputs.branch }}
          fetch-depth: 0
      
      - name: Get latest release
        id: latest_release
        run: |
          RESPONSE=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          echo "Response: $RESPONSE"
          LATEST_RELEASE=$(echo "$RESPONSE" | jq -r .tag_name)
          echo "version=$LATEST_RELEASE" >> $GITHUB_OUTPUT
        shell: bash
  
      - name: Increment patch version
        id: increment_version
        run: |
          VERSION=${{ steps.latest_release.outputs.version }}
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create hotfix branch
        run: git checkout -b hotfix/${{ steps.increment_version.outputs.new_version }}

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Push new branch
        run: git push origin hotfix/${{ steps.increment_version.outputs.new_version }}

      - uses: actions/checkout@v4
        with:
          ref: hotfix/${{ steps.increment_version.outputs.new_version }}
          fetch-depth: 0

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: hotfix/${{ steps.increment_version.outputs.new_version }}
          base: main
          title: Hotfix version ${{ steps.increment_version.outputs.new_version }}
          reviewers: ${{ github.actor }} 
          body: |
            Hi @${{ github.actor }}!

            This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
            Merging this PR will create a GitHub hotfix and upload any assets that are created as part of the release build.
      
      - name: Close Original PR, comment and delete the branch
        run: |
          PR_NUMBER=${{ github.event.inputs.pr_number }}
          REPO=${{ github.repository }}
          BRANCH_NAME=${{ steps.pr_data.outputs.branch }}
          COMMENT="This PR is being closed without merging. The versioned hotfix branch \`hotfix/${{ steps.increment_version.outputs.new_version }}\` has been created from the branch \`${{ steps.pr_data.outputs.branch }}\`"

          # Comment on the PR
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments \
            -d "{\"body\": \"$COMMENT\"}"

          # Close the PR
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO/pulls/$PR_NUMBER \
            -d "{\"state\": \"closed\"}"
          
          # Delete the branch
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO/git/refs/heads/$BRANCH_NAME
        shell: bash
